generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Notification {
  id        String   @id @default(cuid())
  type      String   // 'EXPIRING' | 'LOW_STOCK' | 'OFFER'
  message   String
  isRead    Boolean  @default(false)
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id                  String         @id @default(cuid())
  email               String         @unique
  password            String?
  name                String
  phoneNumber         String?        // Add this field
  address             String?        // Add this field
  familySize          Int            @default(1)
  dietaryRestrictions String[]       @default([])
  allergies           String[]       @default([])
  settings            Json?
  createdAt           DateTime       @default(now())
  updatedAt           DateTime       @updatedAt
  notifications       Notification[]
  shoppingLists      ShoppingList[]
}


model ShoppingList {
  id        String      @id @default(cuid())
  userId    String
  name      String      @default("Shopping List")
  items     ShoppingItem[]
  isActive  Boolean     @default(true)
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  user      User        @relation(fields: [userId], references: [id])

  @@index([userId])
}

model ShoppingItem {
  id            String      @id @default(cuid())
  name          String
  quantity      String
  checked       Boolean     @default(false)
  shoppingList  ShoppingList @relation(fields: [shoppingListId], references: [id], onDelete: Cascade)
  shoppingListId String
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt

  @@index([shoppingListId])
}